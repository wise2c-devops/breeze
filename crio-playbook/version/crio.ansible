  - name: set hostname
    hostname:
      name: '{{ hostname }}'
      use: systemd
    when: format_hostname

  - name: distribute wise2c yum repo for CentOS 8 hosts
    template:
      src: '{{ item.src }}'
      dest: '{{ item.dest }}'
    with_items:
    - { src: 'template/wise2c-centos8.repo.j2', dest: '/etc/yum.repos.d/wise2c.repo' }

  - name: distribute ipvs bootload file
    template:
      src: '{{ item.src }}'
      dest: '{{ item.dest }}'
    with_items:
    - { src: 'template/ipvs.conf.j2', dest: '/etc/modules-load.d/ipvs.conf' }

  - name: modprobe overlay
    community.general.modprobe:
      name: overlay
      state: present

  - name: modprobe br_netfilter
    community.general.modprobe:
      name: br_netfilter
      state: present

  - name: clean yum cache
    shell: |
      yum clean all

  - name: yum install tools
    yum:
      disablerepo: '*'
      enablerepo: "wise2c-base"
      update_cache: true
      state: present
      name: '{{ item }}'
    with_items:
    - tar
    - libselinux-python3
    - rsync
    - jq
    - chrony
    - ipvsadm

  - name: disabled selinux
    selinux:
      state: disabled

  - name: start firewalld
    systemd:
      name: firewalld
      enabled: true
      state: started

  - name: config firewalld
    shell: |
      firewall-cmd --set-default-zone=trusted
      firewall-cmd --complete-reload

  - name: yum install crio and podman
    yum:
      disablerepo: '*'
      enablerepo: "wise2c-crio"
      update_cache: true
      state: present
      name: '{{ item }}'
    with_items:
    - cri-o
    - podman

  - name: distribute chrony server config for Redhat/CentOS
    template:
      src: '{{ item.src }}'
      dest: '{{ item.dest }}'
    with_items:
    - { src: 'template/chrony/redhat-centos/chrony-server.conf.j2', dest: '/etc/chrony.conf' }
    when:
    - inventory_hostname == ansible_play_batch[0]

  - name: distribute chrony client config for Redhat/CentOS
    template:
      src: '{{ item.src }}'
      dest: '{{ item.dest }}'
    with_items:
    - { src: 'template/chrony/redhat-centos/chrony-client.conf.j2', dest: '/etc/chrony.conf' }
    when:
    - inventory_hostname != ansible_play_batch[0]

  - name: start chrony for Redhat/CentOS
    systemd:
      name: chronyd
      daemon_reload: true
      enabled: yes
      state: restarted

  - name: clear crio and registry config files
    copy:
      content: ''
      dest: '{{ item }}'
    with_items:
    - /etc/crio/crio.conf
    - /etc/containers/registries.conf

  - name: init crio on Redhat/CentOS to create folder /etc/crio
    systemd:
      name: crio
      daemon_reload: true
      enabled: true
      state: restarted

  # crio service uses registry.k8s.io/pause:3.9 as default
  # crio service uses cgroupfs for openEuler 22.03 LTS
  # switch from cgroup v1 to cgroup v2
  - name: update pause image in crio.conf
    shell: |
      echo '[crio.image]' > /etc/crio/crio.conf
      echo 'pause_image = "{{ harbor }}/library/pause:3.9"' >> /etc/crio/crio.conf
      echo 'cgroup_manager = "cgroupfs"' >> /etc/crio/crio.conf
      grubby --update-kernel=ALL --args=systemd.unified_cgroup_hierarchy=1

  - name: distribute crio registry config
    template:
      src: '{{ item.src }}'
      dest: '{{ item.dest }}'
    with_items:
    - { src: 'template/registries.conf.j2', dest: '/etc/containers/registries.conf' }
    when: not harbor_https

  - name: distribute crio registry config for harbor with https
    template:
      src: '{{ item.src }}'
      dest: '{{ item.dest }}'
    with_items:
    - { src: 'template/registries.conf.https.j2', dest: '/etc/containers/registries.conf' }
    when: harbor_https

  - name: remove crio configuration file 100-crio-bridge.conf
    file:
      path: /etc/cni/net.d/100-crio-bridge.conf
      state: absent

#  - name: fix cri-o bug
#    script: scripts/fix-crio-bug.sh

  - name: reload & restart crio on Redhat/CentOS
    systemd:
      name: cri-o
      daemon_reload: true
      enabled: true
      state: restarted

  - name: set sysctl
    sysctl:
      name: '{{ item }}'
      value: 1
      state: present
      reload: true
    with_items:
    - net.ipv4.ip_forward
    - net.bridge.bridge-nf-call-iptables
    - net.bridge.bridge-nf-call-ip6tables
