- name: setup prometheus operator
  hosts: prometheus
  user: root
  vars:
    path: /var/tmp/wise2c/prometheus
  tasks:
  - name: copy k8s admin.conf for prometheus installation
    copy:
      src: '{{ item.src }}'
      dest: '{{ item.dest }}'
    with_items:
    - { src: '../../kubernetes-playbook/{{ kubernetes_version }}/file/admin.conf', dest: '{{ ansible_env.HOME }}/.kube/config' }
    run_once: true

  - name: copy etcd cert for prometheus installation
    copy:
      src: '{{ item.src }}'
      dest: '{{ item.dest }}'
    with_items:
    - { src: '../../etcd-playbook/{{ etcd_version }}/file/ca.pem', dest: '/etc/etcd/pki/' }
    - { src: '../../etcd-playbook/{{ etcd_version }}/file/ca-key.pem', dest: '/etc/etcd/pki/' }
    - { src: '../../etcd-playbook/{{ etcd_version }}/file/etcd.pem', dest: '/etc/etcd/pki/' }
    - { src: '../../etcd-playbook/{{ etcd_version }}/file/etcd-key.pem', dest: '/etc/etcd/pki/' }
    run_once: true

  - name: setup kubectl certification
    shell: |
      sed -i "s/.*server:.*/    server: https:\/\/{{ kubernetes_endpoint }}/g" $HOME/.kube/config
      chown $(id -u):$(id -g) $HOME/.kube/config
    run_once: ture

  - name: make prometheus dir
    file:
      path: '{{ item }}'
      state: directory
      mode: 0755
    with_items:
      - '{{ cpath }}'
      - '{{ path }}'
    run_once: ture

  - name: copy prometheus operator tarball and images
    copy:
      src: '{{ item.src }}'
      dest: '{{ item.dest }}'
    with_items:
    - { src: 'file/kube-prometheus-v{{ kube_prometheus_version }}-origin.tar.gz', dest: '{{ path }}' }
    - { src: 'file/kube-prometheus-images-v{{ kube_prometheus_version }}.tar.bz2', dest: '{{ path }}' }
    run_once: true

  - name: copy prometheus operator deploy and reset script
    copy:
      src: '{{ item.src }}'
      dest: '{{ item.dest }}'
      mode: 0755
    with_items:
    - { src: 'file/deploy.sh', dest: '{{ path }}' }
    - { src: 'file/add-on.sh', dest: '{{ path }}' }
    - { src: 'file/remove.sh', dest: '{{ path }}' }
    run_once: true

  - name: copy prometheus operator deploy script dependance file
    copy:
      src: '{{ item.src }}'
      dest: '{{ item.dest }}'
    with_items:
    - { src: './components-version.txt', dest: '{{ path }}' }
    - { src: 'file/append-lines.txt', dest: '{{ path }}' }
    - { src: 'file/images-list.txt', dest: '{{ path }}' }
    - { src: 'file/etcd-address.txt', dest: '{{ path }}' }
    - { src: 'file/harbor-address.txt', dest: '{{ path }}' }
    - { src: 'file/kube-controller-manager.yaml', dest: '{{ path }}' }
    - { src: 'file/kube-scheduler.yaml', dest: '{{ path }}' }
    - { src: 'file/coredns.yaml', dest: '{{ path }}' }
    - { src: 'file/etcd.yaml', dest: '{{ path }}' }
    run_once: true

  - name: load prometheus operator images
    docker_image:
      load_path: '{{ path }}/{{ item }}'
      name: prometheus
      timeout: 600
    with_items:
    - kube-prometheus-images-v{{ kube_prometheus_version }}.tar.bz2
    run_once: true

  - name: docker login
    docker_login:
      registry: '{{ registry_endpoint }}'
      username: '{{ registry_user }}'
      password: '{{ registry_password }}'
      reauthorize: true
    run_once: true

  - name: set harbor address for deploy script
    replace:
      path: "/var/tmp/wise2c/prometheus/{{ item }}"
      regexp: "harbor-address"
      replace: "{{ registry_endpoint }}"
    with_items:
      - "harbor-address.txt"
    run_once: ture

  - name: set etcd address for deploy script
    replace:
      path: "/var/tmp/wise2c/prometheus/{{ item }}"
      regexp: "etcd-address"
      replace: "{{ etcd_endpoint }}"
    with_items:
      - "etcd-address.txt"
    run_once: ture
    
  - name: set nodeport for prometheus alertmanager and grafana service
    template:
      src: '{{ item.src }}'
      dest: '{{ item.dest }}'
    with_items:
      - { src: 'template/prometheus-service.yaml.j2', dest: '{{ cpath }}/prometheus-service.yaml' }
      - { src: 'template/alertmanager-service.yaml.j2', dest: '{{ cpath }}/alertmanager-service.yaml' }
      - { src: 'template/grafana-service.yaml.j2', dest: '{{ cpath }}/grafana-service.yaml' }
    run_once: ture

  - name: prometheus operator deploy
    shell: ./deploy.sh
    args:
      chdir: '{{ cpath }}/'
    run_once: ture

  - name: prometheus add-on deploy
    shell: ./add-on.sh
    args:
      chdir: '{{ cpath }}/'
    run_once: ture

  - name: remove kubectl cert
    file:
      path: '{{ item }}'
      state: absent
    with_items:
      - '{{ ansible_env.HOME }}/.kube/config'
    run_once: ture

  - name: remove etcd cert
    file:
      path: '/etc/etcd/pki'
      state: absent

  - name: copy clean-images-tags.sh
    copy:
      src: '{{ item.src }}'
      dest: '{{ item.dest }}'
      mode: 0755
    with_items:
    - { src: 'file/clean-images-tags.sh', dest: '{{ path }}' }
    run_once: true

  - name: clean image tag
    shell: ./clean-images-tags.sh
    args:
      chdir: '{{ cpath }}/'
    run_once: ture
