- name: set up kubernetes master nodes
  hosts: master
  user: root
  vars:
    path: /var/tmp/wise2c/kubernetes

  tasks:
  - name: check kubernetes services
    script: scripts/check_kubelet_kubeproxy.sh
    register: check_output

  - name: setup master nodes
    include_tasks: master-node.ansible
    when: (not (check_output.stdout == 'true')) and (not (add_worker_node_only == True)) and (not (upgrade_cluster == true))

  - name: fetch admin.conf
    fetch:
      src: '{{ item.src }}'
      dest: '{{ item.dest }}'
      flat: true
    with_items:
    - { src: '/etc/kubernetes/admin.conf', dest: 'file/admin.conf' }
    run_once: true

  - name: make kubernetes dir
    file:
      path: '{{ item }}'
      state: directory
      mode: 0755
    with_items:
    - '{{ path }}'

  - name: copy kubeadm-generate-join-command.sh
    copy:
      src: '{{ item.src }}'
      dest: '{{ item.dest }}'
      mode: 0755
    with_items:
    - { src: 'file/kubeadm-generate-join-command.sh', dest: '{{ path }}/' }
    run_once: true

  - name: kubeadm-generate-join-command
    shell: ./kubeadm-generate-join-command.sh
    args:
      chdir: '{{ path }}'
    run_once: true

  - name: fetch worker-join-command.sh
    fetch:
      src: '{{ item.src }}'
      dest: '{{ item.dest }}'
      flat: true
    with_items:
    - { src: '{{ path }}/worker-join-command.sh', dest: 'file/worker-join-command.sh' }
    run_once: true

- name: setup kubernetes worker nodes
  hosts: node
  user: root
  vars:
    path: /var/tmp/wise2c/kubernetes

  tasks:
  - name: check kubernetes services
    script: scripts/check_kubelet_kubeproxy.sh
    register: check_output

  - name: setup worker nodes
    include_tasks: worker-node.ansible
    when: (not (check_output.stdout == 'true')) and (not (upgrade_cluster == true))

- name: upgrade kubernetes master nodes
  hosts: master
  user: root
  vars:
    path: /var/tmp/wise2c/kubernetes

  tasks:
  - name: push images
    include_tasks: push-images.ansible
    run_once: true
    when: (upgrade_cluster == true)

  - name: copy upgrade scripts
    include_tasks: copy-upgrade-scripts.ansible
    when: (upgrade_cluster == true)

  - name: upgrade the first master node
    shell: ./upgrade_first_master_node.sh
    args:
      chdir: '{{ path }}'
    run_once: true
    when: (upgrade_cluster == true) and (auto_upgrade_nodes == true)

  - name: upgrade other master nodes
    shell: ./upgrade_other_master_nodes.sh
    args:
      chdir: '{{ path }}'
    when: (upgrade_cluster == true) and (auto_upgrade_nodes == true)

- name: upgrade kubernetes worker nodes
  hosts: node
  user: root
  vars:
    path: /var/tmp/wise2c/kubernetes

  tasks:
  - name: copy upgrade scripts
    include_tasks: copy-upgrade-scripts.ansible
    when: (upgrade_cluster == true)

  - name: copy k8s admin.conf for upgrading
    copy:
      src: '{{ item.src }}'
      dest: '{{ item.dest }}'
    with_items:
    - { src: 'file/admin.conf', dest: '{{ ansible_env.HOME }}/.kube/config' }
    when: (upgrade_cluster == true)

  - name: setup kubectl certification
    shell: |
      sed -i "s/.*server:.*/    server: https:\/\/{{ endpoint }}/g" $HOME/.kube/config
      chown $(id -u):$(id -g) $HOME/.kube/config
    when: (upgrade_cluster == true)

  - name: upgrade worker nodes
    shell: ./upgrade_worker_nodes.sh
    args:
      chdir: '{{ path }}'
    when: (upgrade_cluster == true) and (auto_upgrade_nodes == true)

  - name: remove kubectl cert
    file:
      path: '{{ item }}'
      state: absent
    with_items:
      - '{{ ansible_env.HOME }}/.kube/config'
    when: (upgrade_cluster == true) and (auto_upgrade_nodes == true)
