- name: init setup on master nodes
  include_tasks: both.ansible

- name: make etcd cert dir
  file:
    path: '/etc/etcd/pki/'
    state: directory
    mode: 0755

- name: copy etcd cert files
  copy:
    src: '{{ item.src }}'
    dest: '{{ item.dest }}'
  with_items:
  - { src: '../../etcd-playbook/ca.pem', dest: '/etc/etcd/pki/ca.pem' }
  - { src: '../../etcd-playbook/ca-key.pem', dest: '/etc/etcd/pki/ca-key.pem' }
  - { src: '../../etcd-playbook/etcd.pem', dest: '/etc/etcd/pki/etcd.pem' }
  - { src: '../../etcd-playbook/etcd-key.pem', dest: '/etc/etcd/pki/etcd-key.pem' }

- name: copy k8s images
  copy:
    src: '{{ item.src }}'
    dest: '{{ item.dest }}'
  with_items:
  - { src: 'file/k8s.tar.bz2', dest: '{{ path }}' }
  - { src: 'file/flannel.tar.bz2', dest: '{{ path }}' }
  - { src: 'file/dashboard.tar.bz2', dest: '{{ path }}' }
  - { src: 'file/metrics-scraper.tar.bz2', dest: '{{ path }}' }
  - { src: 'file/metrics-server.tar.bz2', dest: '{{ path }}' }
  - { src: 'file/contour.tar.bz2', dest: '{{ path }}' }
  - { src: 'file/contour-envoyproxy.tar.bz2', dest: '{{ path }}' }
  - { src: 'file/contour-demo.tar.bz2', dest: '{{ path }}' }
  run_once: true

- name: copy calico folder
  copy:
    src: '{{ item.src }}'
    dest: '{{ item.dest }}'
  with_items:
  - { src: 'file/calico', dest: '{{ path }}/' }
  run_once: true

- name: copy metrics-server folder
  copy:
    src: '{{ item.src }}'
    dest: '{{ item.dest }}'
  with_items:
  - { src: 'file/metrics-server', dest: '{{ path }}/' }

- name: load k8s images
  shell: |
    podman load -i '{{ path }}/{{ item }}'
  with_items:
    - k8s.tar.bz2
    - flannel.tar.bz2
    - dashboard.tar.bz2
    - metrics-scraper.tar.bz2
    - metrics-server.tar.bz2
    - contour.tar.bz2
    - contour-envoyproxy.tar.bz2
    - contour-demo.tar.bz2
    - calico/images/calico-cni.tar.bz2
    - calico/images/calico-kube-controllers.tar.bz2
    - calico/images/calico-node.tar.bz2
    - calico/images/calico-typha.tar.bz2
    - calico/images/calico-pod2daemon-flexvol.tar.bz2
    - calico/images/calico-ctl.tar.bz2
  async: 600
  poll: 5
  run_once: true

- name: podman login
  containers.podman.podman_login:
    registry: '{{ registry_endpoint }}'
    username: '{{ registry_user }}'
    password: '{{ registry_password }}'
  run_once: true

- name: tag images
  shell: |
    podman tag {{ item.repo }}/{{ item.name }}:{{ item.tag }} {{ registry_endpoint }}/{{ registry_project }}/{{ item.name }}:{{ item.tag }}
  with_items:
    - { repo: '{{ kubernetes_repo }}', name: 'kube-controller-manager', tag: '{{ kubernetes_version }}' }
    - { repo: '{{ kubernetes_repo }}', name: 'kube-apiserver', tag: '{{ kubernetes_version }}' }
    - { repo: '{{ kubernetes_repo }}', name: 'kube-scheduler', tag: '{{ kubernetes_version }}' }
    - { repo: '{{ kubernetes_repo }}', name: 'kube-proxy', tag: '{{ kubernetes_version }}' }
    - { repo: '{{ kubernetes_repo }}', name: 'pause', tag: '{{ pause_version }}' }
    - { repo: '{{ kubernetes_repo }}', name: 'coredns/coredns', tag: '{{ dns_version }}' }
    - { repo: '{{ metrics_server_repo }}/metrics-server', name: 'metrics-server', tag: '{{ metrics_server_version }}' }
    - { repo: '{{ flannel_repo }}', name: 'flannel', tag: '{{ flannel_version }}' }
    - { repo: '{{ flannel_repo }}', name: 'flannel-cni-plugin', tag: '{{ flannel_cni_plugin_version }}' }
    - { repo: 'calico', name: 'cni', tag: '{{ calico_version }}' }
    - { repo: 'calico', name: 'kube-controllers', tag: '{{ calico_version }}' }
    - { repo: 'calico', name: 'node', tag: '{{ calico_version }}' }
    - { repo: 'calico', name: 'typha', tag: '{{ calico_version }}' }
    - { repo: 'calico', name: 'pod2daemon-flexvol', tag: '{{ calico_version }}' }
    - { repo: 'calico', name: 'ctl', tag: '{{ calico_version }}' }
    - { repo: '{{ dashboard_repo }}', name: 'dashboard', tag: '{{ dashboard_version }}' }
    - { repo: '{{ dashboard_repo }}', name: 'metrics-scraper', tag: '{{ metrics_scraper_version }}' }
    - { repo: '{{ contour_repo }}', name: 'contour', tag: '{{ contour_version }}' }
    - { repo: '{{ contour_envoyproxy_repo }}', name: 'envoy', tag: '{{ contour_envoyproxy_version }}' }
    - { repo: '{{ contour_demo_repo }}', name: 'kuard-amd64', tag: '1' }
  run_once: true

- name: tag coredns image
  shell: |
    podman tag {{ item.repo }}/{{ item.name }}:{{ item.tag }} {{ registry_endpoint }}/{{ registry_project }}/coredns:{{ item.tag }}
  with_items:
    - { repo: '{{ kubernetes_repo }}', name: 'coredns/coredns', tag: '{{ dns_version }}' }
  run_once: true

- name: push images
  containers.podman.podman_image:
    name: '{{ registry_endpoint }}/{{ registry_project }}/{{ item.name }}'
    tag: '{{ item.tag }}'
    push: true
    state: present
  with_items:
  - { name: 'kube-controller-manager', tag: '{{ kubernetes_version }}' }
  - { name: 'kube-apiserver', tag: '{{ kubernetes_version }}' }
  - { name: 'kube-scheduler', tag: '{{ kubernetes_version }}' }
  - { name: 'kube-proxy', tag: '{{ kubernetes_version }}' }
  - { name: 'pause', tag: '{{ pause_version }}' }
  - { name: 'coredns', tag: '{{ dns_version }}' }
  - { name: 'coredns/coredns', tag: '{{ dns_version }}' }
  - { name: 'metrics-server', tag: '{{ metrics_server_version }}' }
  - { name: 'flannel', tag: '{{ flannel_version }}' }
  - { name: 'flannel-cni-plugin', tag: '{{ flannel_cni_plugin_version }}' }
  - { name: 'cni', tag: '{{ calico_version }}' }
  - { name: 'kube-controllers', tag: '{{ calico_version }}' }
  - { name: 'node', tag: '{{ calico_version }}' }
  - { name: 'typha', tag: '{{ calico_version }}' }
  - { name: 'pod2daemon-flexvol', tag: '{{ calico_version }}' }
  - { name: 'ctl', tag: '{{ calico_version }}' }
  - { name: 'dashboard', tag: '{{ dashboard_version }}' }
  - { name: 'metrics-scraper', tag: '{{ metrics_scraper_version }}' }
  - { name: 'contour', tag: '{{ contour_version }}' }
  - { name: 'envoy', tag: '{{ contour_envoyproxy_version }}' }
  - { name: 'kuard-amd64', tag: '1' }
  run_once: true

- name: Remove registry.k8s.io and original images tag
  containers.podman.podman_image:
    state: absent
    name: '{{ item.repo }}/{{ item.name }}'
    tag: '{{ item.tag }}'
  with_items:
  - { repo: '{{ kubernetes_repo }}', name: 'kube-controller-manager', tag: '{{ kubernetes_version }}' }
  - { repo: '{{ kubernetes_repo }}', name: 'kube-apiserver', tag: '{{ kubernetes_version }}' }
  - { repo: '{{ kubernetes_repo }}', name: 'kube-scheduler', tag: '{{ kubernetes_version }}' }
  - { repo: '{{ kubernetes_repo }}', name: 'kube-proxy', tag: '{{ kubernetes_version }}' }
  - { repo: '{{ kubernetes_repo }}', name: 'pause', tag: '{{ pause_version }}' }
  - { repo: '{{ kubernetes_repo }}', name: 'coredns', tag: '{{ dns_version }}' }
  - { repo: '{{ kubernetes_repo }}', name: 'coredns/coredns', tag: '{{ dns_version }}' }
  - { repo: '{{ metrics_server_repo }}/metrics-server', name: 'metrics-server', tag: '{{ metrics_server_version }}' }
  - { repo: '{{ flannel_repo }}', name: 'flannel', tag: '{{ flannel_version }}' }
  - { repo: '{{ flannel_repo }}', name: 'flannel-cni-plugin', tag: '{{ flannel_cni_plugin_version }}' }
  - { repo: 'calico', name: 'cni', tag: '{{ calico_version }}' }
  - { repo: 'calico', name: 'kube-controllers', tag: '{{ calico_version }}' }
  - { repo: 'calico', name: 'node', tag: '{{ calico_version }}' }
  - { repo: 'calico', name: 'typha', tag: '{{ calico_version }}' }
  - { repo: 'calico', name: 'pod2daemon-flexvol', tag: '{{ calico_version }}' }
  - { repo: 'calico', name: 'ctl', tag: '{{ calico_version }}' }
  - { repo: '{{ dashboard_repo }}', name: 'dashboard', tag: '{{ dashboard_version }}' }
  - { repo: '{{ dashboard_repo }}', name: 'metrics-scraper', tag: '{{ metrics_scraper_version }}' }
  - { repo: '{{ contour_repo }}', name: 'contour', tag: '{{ contour_version }}' }
  - { repo: '{{ contour_envoyproxy_repo }}', name: 'envoy', tag: '{{ contour_envoyproxy_version }}' }
  - { repo: '{{ contour_demo_repo }}', name: 'kuard-amd64', tag: '1' }
  run_once: true

- name: install git command for helm-push and perl library for ipcalc
  yum:
    disablerepo: '*'
    enablerepo: wise2c-k8s
    update_cache: true
    state: present
    name: '{{ item }}'
  with_items:
  - git
  when: (ansible_distribution == "RedHat") or (ansible_distribution == "CentOS") or (ansible_distribution == "Rocky") or (ansible_distribution == "AlmaLinux") or (ansible_distribution == "OracleLinux") or (ansible_distribution == "Anolis")

- name: generate kubeadm config and other yaml files
  template:
    src: '{{ item.src }}'
    dest: '{{ item.dest }}'
  with_items:
  - { src: 'template/kubeadm.conf.j2', dest: '{{ path }}/kubeadm.conf' }
  - { src: 'template/kube-flannel.yml.j2', dest: '{{ path }}/kube-flannel.yml' }
  - { src: 'template/kubernetes-dashboard.yml.j2', dest: '{{ path }}/kubernetes-dashboard.yml' }
  - { src: 'template/kubernetes-dashboard-svc.yml.j2', dest: '{{ path }}/kubernetes-dashboard-svc.yml' }
  - { src: 'template/metrics-server-deployment.yaml.j2', dest: '{{ path }}/metrics-server/metrics-server-deployment.yaml' }
  - { src: 'template/contour.yml.j2', dest: '{{ path }}/contour.yml' }
  - { src: 'template/contour-demo.yml.j2', dest: '{{ path }}/contour-demo.yml' }

- name: replace pod cidr 10.244.0.0/16 in kubeadm.conf files
  replace:
    dest: "{{ item.filename }}"
    regexp: "podSubnet: 10.244.0.0/16"
    replace: "podSubnet: {{ pod_cidr }}"
  with_items:
    - { filename: "{{ path }}/kubeadm.conf" }

- name: replace ClusterCIDR 10.244.0.0/16 in kubeadm.conf files
  replace:
    dest: "{{ item.filename }}"
    regexp: "clusterCIDR: 10.244.0.0/16"
    replace: "clusterCIDR: {{ cluster_cidr }}"
  with_items:
    - { filename: "{{ path }}/kubeadm.conf" }

- name: replace serviceSubnet 10.96.0.0/12 in kubeadm.conf files
  replace:
    dest: "{{ item.filename }}"
    regexp: "serviceSubnet: 10.96.0.0/12"
    replace: "serviceSubnet: {{ service_cidr }}"
  with_items:
    - { filename: "{{ path }}/kubeadm.conf" }

- name: copy certificates JSON files
  copy:
    src: '{{ item.src }}'
    dest: '{{ item.dest }}'
  with_items:
  - { src: 'file/ca-csr.json', dest: '{{ path }}/' }
  - { src: 'file/ca-config.json', dest: '{{ path }}/' }
  - { src: 'file/apiserver-csr.json', dest: '{{ path }}/' }
  - { src: 'file/kubelet-csr.json', dest: '{{ path }}/' }
  - { src: 'file/front-proxy-ca-csr.json', dest: '{{ path }}/' }
  - { src: 'file/front-proxy-client-csr.json', dest: '{{ path }}/' }
  - { src: 'file/admin-csr.json', dest: '{{ path }}/' }
  - { src: 'file/controller-manager-csr.json', dest: '{{ path }}/' }
  - { src: 'file/scheduler-csr.json', dest: '{{ path }}/' }

- name: copy certificates generation scripts
  template:
    src: '{{ item.src }}'
    dest: '{{ item.dest }}'
    mode: 0755
  with_items:
  - { src: 'file/generate-other-certificates.sh', dest: '{{ path }}/' }
  - { src: 'file/generate-apiserver-certificate.sh', dest: '{{ path }}/' }

- name: copy service_cidr.txt
  template:
    src: '{{ item.src }}'
    dest: '{{ item.dest }}'
  with_items:
  - { src: 'template/service_cidr.txt.j2', dest: '{{ path }}/service_cidr.txt' }

- name: unarchive ipcalc tool
  unarchive:
    src: file/ipcalc-0.41.tar.gz
    dest: /usr/local/bin

- name: make a link for ipcalc
  shell: |
    rm -f /usr/local/bin/ipcalc
    ln -s /usr/local/bin/ipcalc-0.41/ipcalc /usr/local/bin/ipcalc

- name: generate other certificates
  shell: |
    /var/lib/wise2c/tmp/kubernetes/generate-other-certificates.sh
  run_once: true

- name: fetch certificates
  fetch:
    src: '{{ item.src }}'
    dest: '{{ item.dest }}'
    flat: true
  with_items:
  - { src: '/etc/kubernetes/pki/ca.crt', dest: 'file/ca.crt' }
  - { src: '/etc/kubernetes/pki/ca.key', dest: 'file/ca.key' }
  - { src: '/etc/kubernetes/pki/apiserver-kubelet-client.crt', dest: 'file/apiserver-kubelet-client.crt' }
  - { src: '/etc/kubernetes/pki/apiserver-kubelet-client.key', dest: 'file/apiserver-kubelet-client.key' }
  - { src: '/etc/kubernetes/pki/front-proxy-ca.crt', dest: 'file/front-proxy-ca.crt' }
  - { src: '/etc/kubernetes/pki/front-proxy-ca.key', dest: 'file/front-proxy-ca.key' }
  - { src: '/etc/kubernetes/pki/front-proxy-client.crt', dest: 'file/front-proxy-client.crt' }
  - { src: '/etc/kubernetes/pki/front-proxy-client.key', dest: 'file/front-proxy-client.key' }
  - { src: '/etc/kubernetes/pki/sa.pub', dest: 'file/sa.pub' }
  - { src: '/etc/kubernetes/pki/sa.key', dest: 'file/sa.key' }
  - { src: '/etc/kubernetes/pki/admin-key.pem', dest: 'file/admin-key.pem' }
  - { src: '/etc/kubernetes/pki/admin.pem', dest: 'file/admin.pem' }
  - { src: '/etc/kubernetes/pki/controller-manager-key.pem', dest: 'file/controller-manager-key.pem' }
  - { src: '/etc/kubernetes/pki/controller-manager.pem', dest: 'file/controller-manager.pem' }
  - { src: '/etc/kubernetes/pki/scheduler-key.pem', dest: 'file/scheduler-key.pem' }
  - { src: '/etc/kubernetes/pki/scheduler.pem', dest: 'file/scheduler.pem' }  
  run_once: true

- name: copy certificates
  copy:
    src: '{{ item.src }}'
    dest: '{{ item.dest }}'
  with_items:
  - { src: 'file/ca.crt', dest: '/etc/kubernetes/pki/ca.crt' }
  - { src: 'file/ca.key', dest: '/etc/kubernetes/pki/ca.key' }
  - { src: 'file/apiserver-kubelet-client.crt', dest: '/etc/kubernetes/pki/apiserver-kubelet-client.crt' }
  - { src: 'file/apiserver-kubelet-client.key', dest: '/etc/kubernetes/pki/apiserver-kubelet-client.key' }
  - { src: 'file/front-proxy-ca.crt', dest: '/etc/kubernetes/pki/front-proxy-ca.crt' }
  - { src: 'file/front-proxy-ca.key', dest: '/etc/kubernetes/pki/front-proxy-ca.key' }
  - { src: 'file/front-proxy-client.crt', dest: '/etc/kubernetes/pki/front-proxy-client.crt' }
  - { src: 'file/front-proxy-client.key', dest: '/etc/kubernetes/pki/front-proxy-client.key' }
  - { src: 'file/sa.pub', dest: '/etc/kubernetes/pki/sa.pub' }
  - { src: 'file/sa.key', dest: '/etc/kubernetes/pki/sa.key' }
  - { dest: '/etc/kubernetes/pki/admin-key.pem', src: 'file/admin-key.pem' }
  - { dest: '/etc/kubernetes/pki/admin.pem', src: 'file/admin.pem' }
  - { dest: '/etc/kubernetes/pki/controller-manager-key.pem', src: 'file/controller-manager-key.pem' }
  - { dest: '/etc/kubernetes/pki/controller-manager.pem', src: 'file/controller-manager.pem' }
  - { dest: '/etc/kubernetes/pki/scheduler-key.pem', src: 'file/scheduler-key.pem' }
  - { dest: '/etc/kubernetes/pki/scheduler.pem', src: 'file/scheduler.pem' }
  
- name: generate kube-apiserver certificate
  shell: |
    /var/lib/wise2c/tmp/kubernetes/generate-apiserver-certificate.sh

- name: copy kubeadm-token.sh and update-api-advertise-address.sh
  copy:
    src: '{{ item.src }}'
    dest: '{{ item.dest }}'
    mode: 0755
  with_items:
  - { src: 'file/kubeadm-token.sh', dest: '{{ path }}/' }
  - { src: 'file/update-api-advertise-address.sh', dest: '{{ path }}/' }

- name: kubeadm token generate
  shell: ./kubeadm-token.sh
  args:
    chdir: '{{ path }}'
  run_once: true

- name: fetch kubeadm.conf
  fetch:
    src: '{{ item.src }}'
    dest: '{{ item.dest }}'
    flat: true
  with_items:
  - { src: '{{ path }}/kubeadm.conf', dest: 'template/kubeadm.conf' }
  run_once: true

- name: copy kubeadm.conf
  copy:
    src: '{{ item.src }}'
    dest: '{{ item.dest }}'
  with_items:
  - { src: 'template/kubeadm.conf', dest: '{{ path }}/' }

- name: update apiserver advertise address.sh
  shell: ./update-api-advertise-address.sh
  args:
    chdir: '{{ path }}'

- name: kubeadm init
  shell: |
    kubeadm init --config {{ path }}/kubeadm.conf

- name: copy kube-proxy-ds-patch.yaml
  copy:
    src: '{{ item.src }}'
    dest: '{{ item.dest }}'
  with_items:
  - { src: 'file/kube-proxy-ds-patch.yaml', dest: '{{ path }}/' }
  run_once: true

- name: copy patch-kubeconfig.sh
  copy:
    src: '{{ item.src }}'
    dest: '{{ item.dest }}'
    mode: 0755
  with_items:
  - { src: 'file/patch-kubeconfig.sh', dest: '{{ path }}/' }

- name: run patch-kubeconfig.sh
  shell: ./patch-kubeconfig.sh
  args:
    chdir: '{{ path }}'

- name: fetch admin.conf
  fetch:
    src: '{{ item.src }}'
    dest: '{{ item.dest }}'
    flat: true
  with_items:
  - { src: '/etc/kubernetes/admin.conf', dest: 'file/admin.conf' }
  run_once: true

- name: config kubectl
  shell: |
    cp /etc/kubernetes/admin.conf $HOME/.kube/config
    chown $(id -u):$(id -g) $HOME/.kube/config

- name: apply flannel cni
  shell: |
    kubectl apply -f {{ path }}/kube-flannel.yml
  run_once: true
  when: cni == 'Flannel'

- name: replace image repo in calico yaml files
  replace:
    dest: "{{ item.filename }}"
    regexp: "image: docker.io/calico/"
    replace: "image: {{ registry_endpoint }}/{{ registry_project }}/"
  with_items:
    - { filename: "{{ path }}/calico/manifests/calico.yaml" }
    - { filename: "{{ path }}/calico/manifests/calico-typha.yaml" }
    - { filename: "{{ path }}/calico/manifests/canal.yaml" }
  run_once: true

- name: replace image repo in calicoctl yaml file
  replace:
    dest: "{{ item.filename }}"
    regexp: "image: calico/"
    replace: "image: {{ registry_endpoint }}/{{ registry_project }}/"
  with_items:
    - { filename: "{{ path }}/calico/manifests/calicoctl.yaml" }
  run_once: true

- name: replace image repo in canal yaml files
  replace:
    dest: "{{ item.filename }}"
    regexp: "image: quay.io/coreos/flannel:{{ flannel_version }}"
    replace: "image: {{ registry_endpoint }}/{{ registry_project }}/flannel:{{ flannel_version }}"
  with_items:
    - { filename: "{{ path }}/calico/manifests/canal.yaml" }
  run_once: true

- name: replace pod cidr in calico yaml files
  replace:
    dest: "{{ item.filename }}"
    regexp: "192.168.0.0/16"
    replace: "{{ pod_cidr }}"
  with_items:
    - { filename: "{{ path }}/calico/manifests/calico.yaml" }
    - { filename: "{{ path }}/calico/manifests/calico-typha.yaml" }
  run_once: true

- name: replace pod cidr 10.244.0.0/16 in canal yaml files
  replace:
    dest: "{{ item.filename }}"
    regexp: "10.244.0.0/16"
    replace: "{{ pod_cidr }}"
  with_items:
    - { filename: "{{ path }}/calico/manifests/canal.yaml" }
  run_once: true

- name: replace calico_mode in calico yaml files
  replace:
    dest: "{{ item.filename }}"
    regexp: "value: \"Always\""
    replace: "value: \"Never\""
  with_items:
    - { filename: "{{ path }}/calico/manifests/calico.yaml" }
    - { filename: "{{ path }}/calico/manifests/calico-typha.yaml" }
  when: calico_mode == 'BGP'
  run_once: true

- name: add calico_node_ip_detection_mode in calico yaml files
  replace:
    dest: "{{ item.filename }}"
    regexp: '- name: FELIX_HEALTHENABLED[\S\s]*?value: "true"'
    replace: '- name: FELIX_HEALTHENABLED\n              value: "true"\n            - name: IP_AUTODETECTION_METHOD\n              value: {{ calico_node_ip_detection_mode }}'
  with_items:
  - { filename: '{{ path }}/calico/manifests/calico.yaml' }
  - { filename: '{{ path }}/calico/manifests/calico-typha.yaml' }
  run_once: true

- name: replace pod cidr 10.244.0.0/16 in flannel yaml files
  replace:
    dest: "{{ item.filename }}"
    regexp: "10.244.0.0/16"
    replace: "{{ pod_cidr }}"
  with_items:
    - { filename: "{{ path }}/kube-flannel.yml" }
  run_once: true

- name: apply calico cni for cluster with more than 50 nodes
  shell: |
    kubectl apply -f {{ path }}/calico/manifests/calico-typha.yaml
    kubectl apply -f {{ path }}/calico/manifests/calicoctl.yaml
  run_once: true
  when: (cni == 'Calico') and (calico_nodes == 'More_than_50_nodes')

- name: apply calico cni for cluster with 50 nodes or less
  shell: |
    kubectl apply -f {{ path }}/calico/manifests/calico.yaml
    kubectl apply -f {{ path }}/calico/manifests/calicoctl.yaml
  run_once: true
  when: (cni == 'Calico') and (calico_nodes == '50_nodes_or_less')

- name: apply canal cni
  shell: |
    kubectl apply -f {{ path }}/calico/manifests/canal.yaml
  run_once: true
  when: cni == 'Canal'

- name: add kubelet-insecure-tls for metrics server
  replace:
    dest: "{{ item.filename }}"
    regexp: "- --kubelet-use-node-status-port"
    replace: "- --kubelet-use-node-status-port\n        - --kubelet-insecure-tls"
  with_items:
  - { filename: '{{ path }}/metrics-server/metrics-server-deployment.yaml' }
  run_once: true

- name: add hostNetwork for metrics server to fix the compatible error for v1.26
  replace:
    dest: "{{ item.filename }}"
    regexp: "priorityClassName: system-cluster-critical"
    replace: "priorityClassName: system-cluster-critical\n      hostNetwork: true"
  with_items:
  - { filename: '{{ path }}/metrics-server/metrics-server-deployment.yaml' }
  run_once: true

- name: apply addons
  shell: |
    kubectl apply -f {{ path }}/kubernetes-dashboard.yml
    kubectl apply -f {{ path }}/kubernetes-dashboard-svc.yml
    kubectl apply -f {{ path }}/contour.yml
    kubectl apply -f {{ path }}/contour-demo.yml
    kubectl apply -f {{ path }}/metrics-server/metrics-server-deployment.yaml
  run_once: true

- name: update kube-proxy HA setting
  shell: |
    kubectl -n kube-system get cm kube-proxy -o yaml > {{ path }}/kube-proxy-cm-master.yaml
    kubectl -n kube-system get cm kube-proxy -o yaml > {{ path }}/kube-proxy-cm-worker.yaml
    sed -i "s#name: kube-proxy#name: kube-proxy-master#g" {{ path }}/kube-proxy-cm-master.yaml
    sed -i "s#.*server:.*#        server: https://127.0.0.1:6443#g" {{ path }}/kube-proxy-cm-master.yaml
    sed -i "s#.*server:.*#        server: https://{{ endpoint }}#g" {{ path }}/kube-proxy-cm-worker.yaml
    kubectl -n kube-system get ds kube-proxy -o json | jq '.metadata.name = "kube-proxy-master"' | jq '.spec.template.spec.volumes[0].configMap.name = "kube-proxy-master"' | jq '.spec.template.spec.nodeSelector."node-role.kubernetes.io/control-plane"=""' > {{ path }}/kube-proxy-ds-master.json
    kubectl -n kube-system apply -f {{ path }}/kube-proxy-cm-master.yaml
    kubectl -n kube-system apply -f {{ path }}/kube-proxy-cm-worker.yaml
    kubectl -n kube-system apply -f {{ path }}/kube-proxy-ds-master.json
    kubectl -n kube-system patch ds kube-proxy --patch "$(cat /var/lib/wise2c/tmp/kubernetes/kube-proxy-ds-patch.yaml)"
  run_once: true

- name: update HA setting for master nodes
  shell: |
    sed -i "s#.*server:.*#    server: https://127.0.0.1:6443#g" /etc/kubernetes/kubelet.conf
    sed -i "s#.*server:.*#    server: https://127.0.0.1:6443#g" /etc/kubernetes/scheduler.conf
    sed -i "s#.*server:.*#    server: https://127.0.0.1:6443#g" /etc/kubernetes/controller-manager.conf
    sed -i "s#.*server:.*#    server: https://127.0.0.1:6443#g" /root/.kube/config
    podman rm -f $(podman ps -a |grep kube-controller-manager |awk '{print $1}')
    podman rm -f $(podman ps -a |grep kube-scheduler |awk '{print $1}')
    systemctl restart kubelet

- name: execute prometheus-fix-master-nodes script for Redhat/CentOS
  shell: ./prometheus-fix-master-nodes.sh
  args:
    chdir: '{{ path }}'
  when: (ansible_distribution == "RedHat") or (ansible_distribution == "CentOS") or (ansible_distribution == "Rocky") or (ansible_distribution == "AlmaLinux") or (ansible_distribution == "OracleLinux") or (ansible_distribution == "Anolis")

- name: execute prometheus-fix-master-nodes script for Ubuntu
  shell: ./prometheus-fix-master-nodes-ubuntu.sh
  args:
    chdir: '{{ path }}'
  when: ansible_distribution =="Ubuntu"

- name: copy helm binary
  copy:
    src: '{{ item.src }}'
    dest: '{{ item.dest }}'
  with_items:
  - { src: 'file/helm-linux-amd64.tar.gz', dest: '{{ path }}' }

- name: install helm binary
  shell: |
    tar zxvf {{ path }}/helm-linux-amd64.tar.gz --strip-components=1 -C /tmp/
    mv /tmp/helm /usr/local/bin/helm

#- name: upgrade helm repo
#  shell: |
#    helm repo add --username={{ registry_user }} --password={{ registry_password }} {{ registry_project }} http://{{ registry_endpoint }}/chartrepo/{{ registry_project }}
#  when: not registry_https

- name: scale calico-typha replicas
  shell: |
    kubectl -n kube-system scale deployment calico-typha --replicas={{ calico_typha_replicas }}
  run_once: true
  when: (cni == 'Calico') and (calico_nodes == 'More_than_50_nodes')

- name: copy kubelet-conf patch script
  copy:
    src: '{{ item.src }}'
    dest: '{{ item.dest }}'
    mode: 0755
  with_items:
  - { src: 'file/patch-kubelet-conf.sh', dest: '{{ path }}' }

- name: execute patch-kubelet-conf script
  shell: ./patch-kubelet-conf.sh
  args:
    chdir: '{{ path }}'
